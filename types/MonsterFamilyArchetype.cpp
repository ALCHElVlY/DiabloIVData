/**
 * Definition: MonsterFamilyArchetype
 * Hash: bafb842f
 */

#include "MonsterFamilyArchetype.h"

void MonsterFamilyArchetype::read(const char* base, char* &ptr) {
  char *current;
  current = ptr + 0x0;
  readData(&szArchetypeName, base, current);
  current = ptr + 0x4;
  readData(&unk_81459e3, base, current);
  current = ptr + 0x8;
  readData(&tAwareness, base, current);
  current = ptr + 0x24;
  readData(&unk_301c43c, base, current);
  current = ptr + 0x28;
  readData(&dwFlags, base, current);
  current = ptr + 0x2c;
  readData(&unk_b291cd3, base, current);
  current = ptr + 0x30;
  readData(&unk_8495b04, base, current);
  current = ptr + 0x34;
  readData(&flExperienceScalar, base, current);
  current = ptr + 0x38;
  readData(&flHPScalar, base, current);
  current = ptr + 0x3c;
  readData(&flDamageScalar, base, current);
  current = ptr + 0x40;
  readData(&tDamageRange, base, current);
  current = ptr + 0x48;
  readData(&unk_100de70, base, current);
  current = ptr + 0x4c;
  readData(&unk_4324dae, base, current);
  current = ptr + 0x50;
  readData(&unk_c9d3011, base, current);
  current = ptr + 0x54;
  readData(&unk_86e7bb0, base, current);
  current = ptr + 0x58;
  readData(&unk_ccbd7c6, base, current);
  current = ptr + 0x5c;
  readData(&unk_a5b8d03, base, current);
  current = ptr + 0x60;
  readData(&unk_773ad4d, base, current);
  current = ptr + 0x64;
  readData(&flSpeedWalking, base, current);
  current = ptr + 0x68;
  readData(&unk_7383884, base, current);
  current = ptr + 0x6c;
  readData(&unk_5f8b5e1, base, current);
  current = ptr + 0x70;
  readData(&unk_5ee8c01, base, current);
  current = ptr + 0x74;
  readData(&unk_44694db, base, current);
  current = ptr + 0x7c;
  readData(&flAcceleration, base, current);
  current = ptr + 0x80;
  readData(&unk_fbee832, base, current);
  current = ptr + 0x84;
  readData(&unk_39a9625, base, current);
  current = ptr + 0x88;
  readData(&unk_194112d, base, current);
  current = ptr + 0x8c;
  readData(&tFacingData, base, current);
  current = ptr + 0x98;
  readData(&snoSummonPower, base, current);
  current = ptr + 0x9c;
  readData(&unk_f73b6d9, base, current);
  current = ptr + 0xa0;
  readData(&unk_c2cc767, base, current);
  current = ptr + 0xa4;
  readData(&snoStaggerPower, base, current);
  current = ptr + 0xa8;
  readData(&unk_e1387c3, base, current);
  current = ptr + 0xac;
  readData(&unk_5e90f68, base, current);
  current = ptr + 0xb0;
  readData(&unk_74e754e, base, current);
  current = ptr + 0xb4;
  readData(&unk_9b62fa5, base, current);
  current = ptr + 0xb8;
  readData(&unk_18bb74a, base, current);
  current = ptr + 0xc0;
  readData(&unk_9831607, base, current);
  current = ptr + 0xd0;
  readData(&unk_33c346f, base, current);
  current = ptr + 0xd4;
  readData(&unk_1627b04, base, current);
  current = ptr + 0xd8;
  readData(&unk_121fc92, base, current);
  current = ptr + 0xdc;
  readData(&unk_5428a5e, base, current);
  current = ptr + 0xe0;
  readData(&unk_3b9132c, base, current);
  current = ptr + 0xe4;
  readData(&unk_c0cc954, base, current);
  current = ptr + 0xe8;
  readData(&unk_d5178b2, base, current);
  current = ptr + 0xec;
  readData(&unk_e08f0df, base, current);
  current = ptr + 0xf0;
  readData(&unk_c86d0b9, base, current);
  current = ptr + 0xf4;
  readData(&unk_d544bbb, base, current);
  current = ptr + 0xf8;
  readData(&eTiltType, base, current);
  current = ptr + 0xfc;
  readData(&unk_aca2ee7, base, current);
  current = ptr + 0x100;
  readData(&unk_2401865, base, current);
  current = ptr + 0x104;
  readData(&unk_94abb4e, base, current);
  current = ptr + 0x108;
  readData(&unk_f50871, base, current);
  current = ptr + 0x10c;
  readData(&unk_38d1c6b, base, current);
  current = ptr + 0x110;
  readData(&unk_63732a6, base, current);
  current = ptr + 0x114;
  readData(&unk_904bb00, base, current);
  current = ptr + 0x118;
  readData(&unk_28c7e7c, base, current);
  current = ptr + 0x120;
  readData(&snoDisallowedAffixes, base, current);
  ptr += 0x130;
}
