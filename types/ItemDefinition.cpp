/**
 * Definition: ItemDefinition
 * Hash: b9e78bb8
 */

#include "ItemDefinition.h"

void ItemDefinition::read(const char* base, char* &ptr) {
  char *current;
  current = ptr + 0x8;
  readData(&snoActor, base, current);
  current = ptr + 0xc;
  readData(&snoItemType, base, current);
  current = ptr + 0x10;
  readData(&eMagicType, base, current);
  current = ptr + 0x14;
  readData(&dwFlags, base, current);
  current = ptr + 0x18;
  readData(&unk_d645403, base, current);
  current = ptr + 0x28;
  readData(&unk_a56b90b, base, current);
  current = ptr + 0x2c;
  readData(&dwComponentStyle, base, current);
  current = ptr + 0x30;
  readData(&snoLore, base, current);
  current = ptr + 0x34;
  readData(&nMaxStackSize, base, current);
  current = ptr + 0x38;
  readData(&unk_d8f474d, base, current);
  current = ptr + 0x3c;
  readData(&unk_11efbc0, base, current);
  current = ptr + 0x40;
  readData(&eCurrencyType, base, current);
  current = ptr + 0x44;
  readData(&unk_e6a0bdf, base, current);
  current = ptr + 0x48;
  readData(&unk_debbc21, base, current);
  current = ptr + 0x4c;
  readData(&unk_cb9e62d, base, current);
  current = ptr + 0x50;
  readData(&unk_c3b966f, base, current);
  current = ptr + 0x54;
  readData(&unk_8875e7a, base, current);
  current = ptr + 0x58;
  readData(&unk_440d049, base, current);
  current = ptr + 0x5c;
  readData(&ePreferredZone, base, current);
  current = ptr + 0x60;
  readData(&snoBaseItem, base, current);
  current = ptr + 0x64;
  readData(&snoRandomItemTreasureClass, base, current);
  current = ptr + 0x68;
  readData(&snoSalvageTreasureClassNormal, base, current);
  current = ptr + 0x6c;
  readData(&snoSalvageTreasureClassMagic, base, current);
  current = ptr + 0x70;
  readData(&snoSalvageTreasureClassRare, base, current);
  current = ptr + 0x74;
  readData(&snoSalvageTreasureClassLegendary, base, current);
  current = ptr + 0x78;
  readData(&unk_13fbf8b, base, current);
  current = ptr + 0x7c;
  readData(&unk_af5e44f, base, current);
  current = ptr + 0x80;
  readData(&snoRareNamePrefixStringList, base, current);
  current = ptr + 0x84;
  readData(&snoRareNameSuffixStringList, base, current);
  current = ptr + 0x88;
  readData(&snoSetItemBonus, base, current);
  current = ptr + 0x8c;
  readData(&snoPower, base, current);
  current = ptr + 0x90;
  readData(&unk_da84fbb, base, current);
  current = ptr + 0x94;
  readData(&unk_ba8730c, base, current);
  current = ptr + 0x98;
  readData(&unk_ae0eeff, base, current);
  current = ptr + 0xa0;
  readData(&ptAttributes, base, current);
  current = ptr + 0xb0;
  readData(&unk_f7a4116, base, current);
  current = ptr + 0xc0;
  readData(&unk_143ea6c, base, current);
  current = ptr + 0xd0;
  readData(&unk_e6191d6, base, current);
  current = ptr + 0xe0;
  readData(&unk_192312c, base, current);
  current = ptr + 0xf0;
  readData(&unk_9da2273, base, current);
  current = ptr + 0x108;
  readData(&ptSocketedEffects, base, current);
  current = ptr + 0x118;
  readData(&unk_ab5ef77, base, current);
  current = ptr + 0x11c;
  readData(&snoRecipe, base, current);
  current = ptr + 0x120;
  readData(&snoDemonScroll, base, current);
  current = ptr + 0x124;
  readData(&snoMount, base, current);
  current = ptr + 0x128;
  readData(&snoParagonGlyph, base, current);
  current = ptr + 0x130;
  readData(&unk_3202773, base, current);
  current = ptr + 0x140;
  readData(&arReputation, base, current);
  current = ptr + 0x150;
  readData(&tInvImages, base, current);
  current = ptr + 0x178;
  readData(&unk_75d565b, base, current);
  current = ptr + 0x17c;
  readData(&unk_954d4f9, base, current);
  current = ptr + 0x180;
  readData(&fBottomless, base, current);
  current = ptr + 0x184;
  readData(&eItemUseType, base, current);
  current = ptr + 0x188;
  readData(&unk_db54dcf, base, current);
  current = ptr + 0x18c;
  readData(&unk_4bfa38e, base, current);
  current = ptr + 0x190;
  readData(&eDisplayedQualityLevel, base, current);
  current = ptr + 0x194;
  readData(&unk_4a49da6, base, current);
  current = ptr + 0x198;
  readData(&snoPowerPassive, base, current);
  current = ptr + 0x19c;
  readData(&eGemType, base, current);
  current = ptr + 0x1a0;
  readData(&snoPotionPower, base, current);
  current = ptr + 0x1a4;
  readData(&unk_fbc4ae9, base, current);
  ptr += 0x1a8;
}
